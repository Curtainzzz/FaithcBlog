"""
Django settings for blog_django project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&8d273g8v-2aoc6n1sd5+h9%0(*-d10!e8ncx8+!5r*h1kls9y'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = os.environ.get('DJANGO_DEBUG') or True
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blogapp',
    'account_app',
    'comment_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'blog_django.middleware.IpLimitMiddleware',
]

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
       "LOCATION": os.environ.get('DJANGO_REDIS_LOCATION') or "redis://127.0.0.1:6379/0",
       "OPTIONS": {
        "CLIENT_CLASS": "django_redis.client.DefaultClient",
       }
        }
}

ROOT_URLCONF = 'blog_django.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'templates').replace('\\', '/')],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',  # 设置使用jinja2模板
        'DIRS': [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'bysjapp/templates')],  # 设置（模板）html文件位置
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'environment': 'blogapp.jinja2.environment',  # 设置模板环境
        },
    },

]

WSGI_APPLICATION = 'blog_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('DJANGO_MYSQL_DATABASE') or 'blog',
        'USER': os.environ.get('DJANGO_MYSQL_USER') or 'root',
        'PASSWORD': os.environ.get('DJANGO_MYSQL_PASSWORD') or '456',
        'HOST': os.environ.get('DJANGO_MYSQL_HOST') or '127.0.0.1',
        'PORT': os.environ.get('DJANGO_MYSQL_PORT') or '3306',
        'OPTIONS':{
            'charset':'utf8mb4',
        },
    }
}



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },#检查密码是否过于简单
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', 'OPTIONS':{'min_length':6},
    },#检查密码长度是否比6长
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },#检查密码是否过于常见
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },#检查密码是否只有数字
]

AUTH_USER_MODEL = 'account_app.BlogUser'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS=(os.path.join(BASE_DIR, "static"),)
STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

#email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 465
#发送邮件的邮箱
EMAIL_HOST_USER = 'zkk7321@163.com'
#在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = 'NTJICHTBYOLTVAOP'
#收件人看到的发件人
DEFAULT_FROM_EMAIL = "'FaithcBlog<zkk7321@163.com>"
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False
# EMAIL_HOST_USER = os.environ.get('DJANGO_EMAIL_USER')
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
